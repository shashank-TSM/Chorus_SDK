// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios13.4 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name Chorus_SDK
@_exported import Chorus_SDK
import CoreBluetooth
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
extension Chorus_SDK.DeviceStruct : Swift.Equatable {
  public static func == (lhs: Chorus_SDK.DeviceStruct, rhs: Chorus_SDK.DeviceStruct) -> Swift.Bool
}
public struct DeviceStruct : Swift.Identifiable, Swift.Hashable {
  public let id: Foundation.UUID
  public var name: Swift.String
  public let mac: Swift.String
  public var rssi: Swift.Int
  public var payload: Swift.String
  public var longitude: Swift.String?
  public var latitude: Swift.String?
  public let uuid: Swift.String
  public var timestamp: Swift.String
  public init(name: Swift.String, mac: Swift.String, rssi: Swift.Int, payload: Swift.String, uuid: Swift.String, timestamp: Swift.String, longitude: Swift.String?, latitude: Swift.String?)
  public func hash(into hasher: inout Swift.Hasher)
  public typealias ID = Foundation.UUID
  public var hashValue: Swift.Int {
    get
  }
}
public class SdkInitializer {
  public init()
  public struct UploadDeviceDataConfig {
  }
  public func setOrgId(_ id: Swift.String)
  public func startBackgroundScanning(scanForDuration: Foundation.TimeInterval? = nil, pauseInterval: Foundation.TimeInterval? = nil, latitude: Swift.String, longitude: Swift.String, uploadDataConfig: Chorus_SDK.SdkInitializer.UploadDeviceDataConfig? = nil)
  public func disableBackGroundScanning()
  public func getDiscoveredDevices() -> [Chorus_SDK.DeviceStruct]
  @objc deinit
}
